/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type NotFoundErrorResponseData = {
  meta: components.Meta;
  error: components.BaseError;
};

export class NotFoundErrorResponse extends Error {
  meta: components.Meta;
  error: components.BaseError;

  /** The original data that was passed to this error instance. */
  data$: NotFoundErrorResponseData;

  constructor(err: NotFoundErrorResponseData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.meta = err.meta;
    this.error = err.error;

    this.name = "NotFoundErrorResponse";
  }
}

/** @internal */
export const NotFoundErrorResponse$inboundSchema: z.ZodType<
  NotFoundErrorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  meta: components.Meta$inboundSchema,
  error: components.BaseError$inboundSchema,
})
  .transform((v) => {
    return new NotFoundErrorResponse(v);
  });

/** @internal */
export type NotFoundErrorResponse$Outbound = {
  meta: components.Meta$Outbound;
  error: components.BaseError$Outbound;
};

/** @internal */
export const NotFoundErrorResponse$outboundSchema: z.ZodType<
  NotFoundErrorResponse$Outbound,
  z.ZodTypeDef,
  NotFoundErrorResponse
> = z.instanceof(NotFoundErrorResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    meta: components.Meta$outboundSchema,
    error: components.BaseError$outboundSchema,
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace NotFoundErrorResponse$ {
  /** @deprecated use `NotFoundErrorResponse$inboundSchema` instead. */
  export const inboundSchema = NotFoundErrorResponse$inboundSchema;
  /** @deprecated use `NotFoundErrorResponse$outboundSchema` instead. */
  export const outboundSchema = NotFoundErrorResponse$outboundSchema;
  /** @deprecated use `NotFoundErrorResponse$Outbound` instead. */
  export type Outbound = NotFoundErrorResponse$Outbound;
}
