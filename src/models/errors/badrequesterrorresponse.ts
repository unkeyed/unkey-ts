/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";

export type BadRequestErrorResponseData = {
  meta: components.Meta;
  error: components.BadRequestErrorDetails;
};

export class BadRequestErrorResponse extends Error {
  meta: components.Meta;
  error: components.BadRequestErrorDetails;

  /** The original data that was passed to this error instance. */
  data$: BadRequestErrorResponseData;

  constructor(err: BadRequestErrorResponseData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.meta = err.meta;
    this.error = err.error;

    this.name = "BadRequestErrorResponse";
  }
}

/** @internal */
export const BadRequestErrorResponse$inboundSchema: z.ZodType<
  BadRequestErrorResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  meta: components.Meta$inboundSchema,
  error: components.BadRequestErrorDetails$inboundSchema,
})
  .transform((v) => {
    return new BadRequestErrorResponse(v);
  });

/** @internal */
export type BadRequestErrorResponse$Outbound = {
  meta: components.Meta$Outbound;
  error: components.BadRequestErrorDetails$Outbound;
};

/** @internal */
export const BadRequestErrorResponse$outboundSchema: z.ZodType<
  BadRequestErrorResponse$Outbound,
  z.ZodTypeDef,
  BadRequestErrorResponse
> = z.instanceof(BadRequestErrorResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    meta: components.Meta$outboundSchema,
    error: components.BadRequestErrorDetails$outboundSchema,
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BadRequestErrorResponse$ {
  /** @deprecated use `BadRequestErrorResponse$inboundSchema` instead. */
  export const inboundSchema = BadRequestErrorResponse$inboundSchema;
  /** @deprecated use `BadRequestErrorResponse$outboundSchema` instead. */
  export const outboundSchema = BadRequestErrorResponse$outboundSchema;
  /** @deprecated use `BadRequestErrorResponse$Outbound` instead. */
  export type Outbound = BadRequestErrorResponse$Outbound;
}
