/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type V2LivenessResponseBody = {
  /**
   * Whether we're alive or not
   */
  message: string;
};

/** @internal */
export const V2LivenessResponseBody$inboundSchema: z.ZodType<
  V2LivenessResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type V2LivenessResponseBody$Outbound = {
  message: string;
};

/** @internal */
export const V2LivenessResponseBody$outboundSchema: z.ZodType<
  V2LivenessResponseBody$Outbound,
  z.ZodTypeDef,
  V2LivenessResponseBody
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V2LivenessResponseBody$ {
  /** @deprecated use `V2LivenessResponseBody$inboundSchema` instead. */
  export const inboundSchema = V2LivenessResponseBody$inboundSchema;
  /** @deprecated use `V2LivenessResponseBody$outboundSchema` instead. */
  export const outboundSchema = V2LivenessResponseBody$outboundSchema;
  /** @deprecated use `V2LivenessResponseBody$Outbound` instead. */
  export type Outbound = V2LivenessResponseBody$Outbound;
}

export function v2LivenessResponseBodyToJSON(
  v2LivenessResponseBody: V2LivenessResponseBody,
): string {
  return JSON.stringify(
    V2LivenessResponseBody$outboundSchema.parse(v2LivenessResponseBody),
  );
}

export function v2LivenessResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<V2LivenessResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => V2LivenessResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V2LivenessResponseBody' from JSON`,
  );
}
