/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RatelimitOverrideItem = {
  /**
   * The id of the override.
   */
  overrideId: string;
  /**
   * Identifier of your user
   */
  identifier: string;
  /**
   * The maximum number of requests allowed.
   */
  limit: number;
  /**
   * The duration in milliseconds for the rate limit window.
   */
  duration: number;
};

/** @internal */
export const RatelimitOverrideItem$inboundSchema: z.ZodType<
  RatelimitOverrideItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  overrideId: z.string(),
  identifier: z.string(),
  limit: z.number().int(),
  duration: z.number().int(),
});

/** @internal */
export type RatelimitOverrideItem$Outbound = {
  overrideId: string;
  identifier: string;
  limit: number;
  duration: number;
};

/** @internal */
export const RatelimitOverrideItem$outboundSchema: z.ZodType<
  RatelimitOverrideItem$Outbound,
  z.ZodTypeDef,
  RatelimitOverrideItem
> = z.object({
  overrideId: z.string(),
  identifier: z.string(),
  limit: z.number().int(),
  duration: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RatelimitOverrideItem$ {
  /** @deprecated use `RatelimitOverrideItem$inboundSchema` instead. */
  export const inboundSchema = RatelimitOverrideItem$inboundSchema;
  /** @deprecated use `RatelimitOverrideItem$outboundSchema` instead. */
  export const outboundSchema = RatelimitOverrideItem$outboundSchema;
  /** @deprecated use `RatelimitOverrideItem$Outbound` instead. */
  export type Outbound = RatelimitOverrideItem$Outbound;
}

export function ratelimitOverrideItemToJSON(
  ratelimitOverrideItem: RatelimitOverrideItem,
): string {
  return JSON.stringify(
    RatelimitOverrideItem$outboundSchema.parse(ratelimitOverrideItem),
  );
}

export function ratelimitOverrideItemFromJSON(
  jsonString: string,
): SafeParseResult<RatelimitOverrideItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RatelimitOverrideItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RatelimitOverrideItem' from JSON`,
  );
}
