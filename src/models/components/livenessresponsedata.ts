/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type LivenessResponseData = {
  /**
   * Whether we're alive or not
   */
  message: string;
};

/** @internal */
export const LivenessResponseData$inboundSchema: z.ZodType<
  LivenessResponseData,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.string(),
});

/** @internal */
export type LivenessResponseData$Outbound = {
  message: string;
};

/** @internal */
export const LivenessResponseData$outboundSchema: z.ZodType<
  LivenessResponseData$Outbound,
  z.ZodTypeDef,
  LivenessResponseData
> = z.object({
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace LivenessResponseData$ {
  /** @deprecated use `LivenessResponseData$inboundSchema` instead. */
  export const inboundSchema = LivenessResponseData$inboundSchema;
  /** @deprecated use `LivenessResponseData$outboundSchema` instead. */
  export const outboundSchema = LivenessResponseData$outboundSchema;
  /** @deprecated use `LivenessResponseData$Outbound` instead. */
  export type Outbound = LivenessResponseData$Outbound;
}

export function livenessResponseDataToJSON(
  livenessResponseData: LivenessResponseData,
): string {
  return JSON.stringify(
    LivenessResponseData$outboundSchema.parse(livenessResponseData),
  );
}

export function livenessResponseDataFromJSON(
  jsonString: string,
): SafeParseResult<LivenessResponseData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => LivenessResponseData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'LivenessResponseData' from JSON`,
  );
}
