/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ratelimitDeleteOverride } from "../funcs/ratelimitDeleteOverride.js";
import { ratelimitGetOverride } from "../funcs/ratelimitGetOverride.js";
import { ratelimitLimit } from "../funcs/ratelimitLimit.js";
import { ratelimitSetOverride } from "../funcs/ratelimitSetOverride.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Ratelimit extends ClientSDK {
  /**
   * TODO
   */
  async limit(
    request: components.V2RatelimitLimitRequestBody,
    options?: RequestOptions,
  ): Promise<operations.V1RatelimitLimitResponse> {
    return unwrapAsync(ratelimitLimit(
      this,
      request,
      options,
    ));
  }

  async setOverride(
    request: components.V2RatelimitSetOverrideRequestBody,
    options?: RequestOptions,
  ): Promise<operations.RatelimitSetOverrideResponse> {
    return unwrapAsync(ratelimitSetOverride(
      this,
      request,
      options,
    ));
  }

  async getOverride(
    request: components.V2RatelimitGetOverrideRequestBody,
    options?: RequestOptions,
  ): Promise<operations.RatelimitGetOverrideResponse> {
    return unwrapAsync(ratelimitGetOverride(
      this,
      request,
      options,
    ));
  }

  async deleteOverride(
    request: components.V2RatelimitDeleteOverrideRequestBody,
    options?: RequestOptions,
  ): Promise<operations.RatelimitDeleteOverrideResponse> {
    return unwrapAsync(ratelimitDeleteOverride(
      this,
      request,
      options,
    ));
  }
}
